{"version":3,"sources":["components/Header/Header.js","components/Searchbar/Searchbar.js","components/ErrorCard/ErrorCard.js","components/DetailsCardInfo/DetailsCardInfo.js","components/DailyCardInfo/DailyCardInfo.js","components/HourlyCardInfo/HourlyCardInfo.js","components/CardNav/CardNav.js","components/Card/Card.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","Searchbar","onSubmit","useState","search","setSearch","e","preventDefault","type","value","placeholder","onChange","target","ErrorCard","results","cod","message","DetailsCardInfo","Math","floor","main","feels_like","humidity","wind","speed","dateFormatter","unixTime","Date","toLocaleDateString","month","day","DailyCardInfo","dailyInfo","daily","map","index","dt","weekday","src","weather","icon","alt","description","round","temp","max","min","HourlyCardInfo","hourly","hour","split","CardNav","id","name","active","setActive","button","onClick","textContent","handleToggle","Card","setDailyInfo","useEffect","fetch","coord","lat","lon","then","res","json","data","toLowerCase","sys","country","year","temp_min","temp_max","App","setResults","searchWord","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f1294f6c.chunk.js","sourcesContent":["import React from 'react'\r\nimport './Header.css';\r\n\r\nconst Header = () => {\r\n  return (\r\n    <header className=\"weather-app__header text--center\">\r\n      <h1 className=\"weather-app__header-title\">Weather Application</h1>\r\n      <p className=\"weather-app__header-subtitle\">&lt;/ Hackday @ spring21salt - by Johan Eriksson &gt;</p>\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","import React, { useState } from 'react'\r\nimport './Searchbar.css';\r\n\r\nconst Searchbar = ({ onSubmit }) => {\r\n  const [search, setSearch] = useState('');\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    onSubmit(search);\r\n\r\n    setSearch('');\r\n  }\r\n\r\n  return (\r\n    <form\r\n      className=\"weather-app__search\"\r\n      onSubmit={handleSubmit}>\r\n      <input\r\n        type=\"text\"\r\n        className=\"weather-app__search-input text--center\"\r\n        value={search}\r\n        placeholder=\"Search location...\"\r\n        onChange={e => setSearch(e.target.value)}/>\r\n      <button type=\"submit\" className=\"weather-app__search-button\">\r\n        <i className=\"fas fa-search\"></i>\r\n      </button>\r\n      {/* <input type=\"submit\" value=\"Search\" /> */}\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default Searchbar\r\n","import React from 'react';\r\nimport './ErrorCard.css';\r\n\r\nconst ErrorCard = ({ results }) => {\r\n  return (\r\n    <div className=\"error-card__image-container\">\r\n      <div className=\"error-card__container text--center\">\r\n        <h2 className=\"error-card__error-icon\"><i className=\"fas fa-exclamation-triangle\"></i></h2>\r\n        <h3 className=\"error-card__status-code\">Error {results.cod}</h3>\r\n        <h4 className=\"error-card__status-message\">{results.message}</h4>\r\n        <h4 className=\"error-card__status-message-guide\">Please make a new search</h4>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ErrorCard\r\n","import React from 'react';\r\nimport './DetailsCardInfo.css';\r\n\r\nconst DetailsCardInfo = ({ results }) => {\r\n  return (\r\n    <div className=\"list-item__extra-info\">\r\n      <div className=\"extra-info__card\">\r\n        <h3><i className=\"fas fa-hand-sparkles\"></i> {Math.floor(results.main.feels_like)} Â°</h3>\r\n        <h4>Feels Like</h4>\r\n      </div>\r\n      <div className=\"extra-info__card\">\r\n        <h3><i className=\"fas fa-tint\"></i> {Math.floor(results.main.humidity)} %</h3>\r\n        <h4>Humidity</h4>\r\n      </div>\r\n      <div className=\"extra-info__card\">\r\n        <h3><i className=\"fas fa-wind\"></i> {results.wind.speed} m/s</h3>\r\n        <h4>Wind Speed</h4>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DetailsCardInfo\r\n","import React from 'react';\r\nimport './DailyCardInfo.css';\r\n\r\nconst dayDateFormatter = (unixTime) => {\r\n  const unixTimeInMs = unixTime * 1000;\r\n  const dateObject = new Date(unixTimeInMs);\r\n  const dateOptions = { weekday: 'long' };\r\n  return dateObject.toLocaleDateString(\"en-US\", dateOptions);\r\n};\r\n\r\nconst dateFormatter = (unixTime) => {\r\n  const unixTimeInMs = unixTime * 1000;\r\n  const dateObject = new Date(unixTimeInMs);\r\n  const dateOptions = { month: 'long', day: 'numeric'};\r\n  return dateObject.toLocaleDateString(\"en-US\", dateOptions);\r\n};\r\n\r\nconst DailyCardInfo = ({ dailyInfo}) => {\r\n\r\n  return (\r\n    <div className=\"list-item__daily-container\">\r\n      <div\r\n        className=\"list-item__daily-info\">\r\n        {dailyInfo.daily && dailyInfo.daily.map((day, index) => (\r\n          index < 5 &&\r\n          <div\r\n            key={index}\r\n            className=\"daily-info__card\">\r\n            <h4>{dayDateFormatter(day.dt)}</h4>\r\n            <h6>{dateFormatter(day.dt)}</h6>\r\n            <img\r\n                src={`http://openweathermap.org/img/wn/${day.weather[0].icon}.png`}\r\n                alt={day.weather[0].description} />\r\n            <h4 className=\"list-item__minmax-temp\"><span className=\"color--light-yellow\">{Math.round(day.temp.max)}Â°</span> / <span className=\"color--light-purple\">{Math.round(day.temp.min)}Â°</span></h4>\r\n            <h5>{day.weather[0].main}</h5>\r\n        </div>))}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DailyCardInfo;\r\n","import React from 'react';\r\nimport './HourlyCardInfo.css';\r\n\r\nconst timeFormatter = (unixTime) => {\r\n  const unixTimeInMs = unixTime * 1000;\r\n  const dateObject = new Date(unixTimeInMs);\r\n  const dateOptions = { hour: 'numeric' };\r\n  const time = dateObject.toLocaleDateString(\"en-US\", dateOptions);\r\n  return time.split(',')[1];\r\n};\r\n\r\nconst HourlyCardInfo = ({ dailyInfo }) => {\r\n  return (\r\n    <div className=\"list-item__hourly-container\">\r\n      <div\r\n      className=\"list-item__hourly-info\">\r\n      {dailyInfo.hourly && dailyInfo.hourly.map((hour, index) => (\r\n        index < 8 &&\r\n        <div\r\n          key={index}\r\n          className=\"hourly-info__card\">\r\n          <h4>{timeFormatter(hour.dt)}</h4>\r\n          <img\r\n              src={`http://openweathermap.org/img/wn/${hour.weather[0].icon}.png`}\r\n              alt={hour.weather[0].description} />\r\n          <h4>{Math.floor(hour.temp)}Â°</h4>\r\n          <h5>{hour.weather[0].main}</h5>\r\n      </div>))}\r\n    </div>\r\n  </div>\r\n  )\r\n}\r\n\r\nexport default HourlyCardInfo\r\n","import React, { useState } from 'react';\r\nimport './CardNav.css';\r\nimport DetailsCardInfo from '../DetailsCardInfo/DetailsCardInfo';\r\nimport DailyCardInfo from '../DailyCardInfo/DailyCardInfo';\r\nimport HourlyCardInfo from '../HourlyCardInfo/HourlyCardInfo';\r\n\r\nconst CardNav = ({ dailyInfo, results }) => {\r\n  const [active, setActive] = useState([\r\n    {\r\n      id: 1,\r\n      name: 'Details',\r\n      active: true\r\n    },\r\n    {\r\n      id: 2,\r\n      name: 'Hourly',\r\n      active: false\r\n    },\r\n    {\r\n      id: 3,\r\n      name: 'Daily',\r\n      active: false\r\n    }\r\n  ]);\r\n\r\n  const handleToggle = e => {\r\n    setActive(active.map(button => button.name === e.target.textContent\r\n      ? {...button, active: true}\r\n      : {...button, active: false}));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <nav className=\"list-item__card-nav\">\r\n        {active.map(button => (\r\n          <li key={button.id}>\r\n            <button\r\n              onClick={e => handleToggle(e)}\r\n              className={`card-nav__item ${button.active && 'item--active'}`}>{button.name}</button>\r\n          </li>\r\n        ))}\r\n      </nav>\r\n      {active[0].active && <DetailsCardInfo results={results} />}\r\n      {dailyInfo.daily && active[1].active && <HourlyCardInfo dailyInfo={dailyInfo} />}\r\n      {dailyInfo.daily && active[2].active && <DailyCardInfo dailyInfo={dailyInfo} />}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default CardNav\r\n","import React, { useState, useEffect } from 'react';\r\nimport CardNav from '../CardNav/CardNav';\r\nimport './Card.css';\r\n\r\nconst dateFormatter = (unixTime) => {\r\n  const unixTimeInMs = unixTime * 1000;\r\n  const dateObject = new Date(unixTimeInMs);\r\n  const dateOptions = { weekday: 'long', month: 'long', day: 'numeric', year: \"numeric\"};\r\n  return dateObject.toLocaleDateString(\"en-US\", dateOptions);\r\n};\r\n\r\nconst Card = ({ results }) => {\r\n  const [dailyInfo, setDailyInfo] = useState({});\r\n\r\n  useEffect(() => {\r\n    const fetchDailyInfo = () => {\r\n      fetch(`/api/coords/${results.coord.lat}&${results.coord.lon}`)\r\n        .then(res => res.json())\r\n        .then(data => setDailyInfo(data));\r\n    }\r\n\r\n    fetchDailyInfo();\r\n  }, [results.coord.lon, results.coord.lat])\r\n\r\n  return (\r\n    <>\r\n      <li className={`weather-app__list-item bg--cover bg--${results.weather[0].main.toLowerCase()}`}>\r\n        <div className=\"list-item-container\">\r\n          <div className=\"list-item__main-content\">\r\n            <div className=\"list-item__content--left-side\">\r\n              <h3 className=\"list-item__location\">{results.name}, {results.sys.country}</h3>\r\n              <h4 className=\"list-item__date\">{dateFormatter(results.dt)}</h4>\r\n              <img\r\n                src={`http://openweathermap.org/img/wn/${results.weather[0].icon}@2x.png`}\r\n                alt={results.weather[0].description} />\r\n              <h3 className=\"list-item__weather\">{results.weather[0].main}</h3>\r\n            </div>\r\n            <div className=\"list-item__content--right-side\">\r\n              <h2 className=\"list-item__temp\">{Math.round(results.main.temp)}Â°</h2>\r\n              <h3 className=\"list-item__minmax-temp\"><span className=\"color--light-yellow\">{Math.round(results.main.temp_min)}Â°</span> / <span className=\"color--light-purple\">{Math.round(results.main.temp_max)}Â°</span></h3>\r\n            </div>\r\n          </div>\r\n        <CardNav results={results} dailyInfo={dailyInfo}/>\r\n        </div>\r\n      </li>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Card;\r\n","import './App.css';\r\nimport Header from './components/Header/Header';\r\nimport Searchbar from './components/Searchbar/Searchbar';\r\nimport ErrorCard from './components/ErrorCard/ErrorCard';\r\nimport Card from './components/Card/Card';\r\nimport { useState } from 'react';\r\n\r\nfunction App() {\r\n  const [results, setResults] = useState({});\r\n  \r\n  const fetchResults = (searchWord) => {\r\n    fetch(`/api/cityname/${searchWord}`)\r\n      .then(res => res.json())\r\n      .then(data => setResults(data));\r\n  }\r\n\r\n  return (\r\n    <section className=\"weather-app\">\r\n      <Header />\r\n      <Searchbar onSubmit={fetchResults}/>\r\n      <ul className=\"weather-app__list\">\r\n        {results.message && <ErrorCard \r\n          results={results}/>}\r\n        {results.name && <Card\r\n          results={results}/>}\r\n      </ul>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}